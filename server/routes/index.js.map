{"version":3,"sources":["routes/index.ts"],"names":[],"mappings":"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","file":"routes/index.js","sourcesContent":["import express = require('express');\nvar sendgrid = require('sendgrid')('azure_84c024842e756033521773acc6801bc1@azure.com', 'georgian2016');\nvar router = express.Router();\n\n// db references\nvar User = require('../models/user');\n\n/* GET home page. */\nrouter.get('/', (req: express.Request, res: express.Response, next: any) => {\n    res.render('index', { title: 'Home' });\n});\n\n/* GET product page. */\nrouter.get('/products', (req: express.Request, res: express.Response, next: any) => {\n    res.render('index', { title: 'Products' });\n});\n\n/* GET services page. */\nrouter.get('/services', (req: express.Request, res: express.Response, next: any) => {\n    res.render('index', { title: 'Services' });\n});\n\n/* GET about page. */\nrouter.get('/about', (req: express.Request, res: express.Response, next: any) => {\n    res.render('index', { title: 'About' });\n});\n\n/* GET contact page. */\nrouter.get('/contact', (req: express.Request, res: express.Response, next: any) => {\n    req.flash('successmessage', 'Thank You. Your message has been sent.');\n    req.flash('errormessage','An Error has occurred.');\n    res.render('contact', { title: 'Contact', messages: null });\n});\n\n/* Email processing */\nrouter.post('/contact', (req: express.Request, res: express.Response, next: any) => {\n    sendgrid.send({\n        to: 'tsiliopoulos@hotmail.com',\n        from: req.body.email,\n        subject: 'Contact Form Submission',\n        text: \"This message has been sent from the contact form at [MongoDB Demo]\\r\\n\\r\\n\" +\n        \"Name: \" + req.body.name + \"\\r\\n\\r\\n\" +\n        \"Phone: \" + req.body.phone + \"\\r\\n\\r\\n\" +\n        req.body.message,\n        html: \"This message has been sent from the contact form at [MongoDB Demo]<br><br>\" +\n        \"<strong>Name:</strong> \" + req.body.name + \"<br><br>\" +\n        \"<strong>Phone:</strong> \" + req.body.phone + \"<br><br>\" +\n        req.body.message\n    },\n        (err, json) => {\n            if (err) { res.status(500).json('error'); \n            }\n            res.render('contact', { \n                title: 'Contact',\n                messages: req.flash('successmessage')\n         });\n\n        });\n});\n\n\nmodule.exports = router;\n"],"sourceRoot":"/source/"}